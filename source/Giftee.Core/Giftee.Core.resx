<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LoremIpsum" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</value>
    <comment>Source text for password generation logic.</comment>
  </data>
  <data name="MailLbl_PwdChanged" xml:space="preserve">
    <value>Account Update Notification from Giftee</value>
    <comment>Message Title for MailMsg_PwdChanged.</comment>
  </data>
  <data name="MailLbl_Registered" xml:space="preserve">
    <value>You've Registered with Giftee!</value>
    <comment>Message title for MailMsg_Registered.</comment>
  </data>
  <data name="MailLbl_WishListChanged" xml:space="preserve">
    <value>Activity Notification from Giftee</value>
    <comment>Message title for MailMsg_WishlistChanged.</comment>
  </data>
  <data name="MailMsg_PwdChanged" xml:space="preserve">
    <value>Your Giftee password has been reset.

When next you visit http://giftee.apphb.com, please log on with the following information:
            
    E-Mail: {0}
    Password: {1}

Seasons Greetings!</value>
    <comment>Message sent when an account password been reset.</comment>
  </data>
  <data name="MailMsg_Registered" xml:space="preserve">
    <value>Thanks for creating an account with Giftee.

In order to start using Giftee, you'll need to visit http://giftee.apphb.com and enter the following information:
            
    E-Mail: {0}
    Password: {1}

Happy Holidays!</value>
    <comment>Message sent to newly registered accounts.</comment>
  </data>
  <data name="MailMsg_WishlistChanged" xml:space="preserve">
    <value>This is just a quick note to let you know your Giftee has made a change to his or her wishlist.

Maybe a new item was added? Or perhaps a size was adjusted? Find out by visiting
http://giftee.apphb.com

Merry Christmas!</value>
    <comment>Message send to giftor when giftee edits his or her wishlist.</comment>
  </data>
  <data name="SQL_AllGiftors" xml:space="preserve">
    <value>select ID,FirstName,LastName,Email,[Password],IsAdmin,GroupAs,GifteeID from Giftors</value>
    <comment>Queries all giftor records.</comment>
  </data>
  <data name="SQL_DeleteWishByID" xml:space="preserve">
    <value>delete from Wishes where ID = /* wishID */''</value>
    <comment>Delete wish record with the gven ID.</comment>
  </data>
  <data name="SQL_GiftorByEmail" xml:space="preserve">
    <value>select ID,FirstName,LastName,Email,[Password],IsAdmin,GroupAs,GifteeID from Giftors where Email = /* email */''</value>
    <comment>Queries a giftor record with the given e-mail.</comment>
  </data>
  <data name="SQL_GiftorGiftee" xml:space="preserve">
    <value>select r.ID,r.FirstName,r.LastName,r.Email,r.[Password],r.IsAdmin,r.GroupAs,r.GifteeID from Giftors r join Giftors g on r.ID = g.GifteeID where g.ID = /* giftorID */''</value>
    <comment>Queries the giftee record associated with a given giftor ID.</comment>
  </data>
  <data name="SQL_GiftorWishes" xml:space="preserve">
    <value>select ID,GiftorID,Rank,Summary from Wishes where GiftorID = /* giftorID */'' order by Rank asc</value>
    <comment>Queries all wish records with the given giftor ID.</comment>
  </data>
  <data name="SQ_GifteeGiftorEmail" xml:space="preserve">
    <value>select g.Email from Giftors r join Giftors g on r.ID = g.GifteeID where r.ID = /* gifteeID */''</value>
    <comment>Queries the giftor e-mail address for a given giftee ID.</comment>
  </data>
</root>